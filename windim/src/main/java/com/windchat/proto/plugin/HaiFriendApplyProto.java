// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plugin/hai_friend_apply.proto

package com.windchat.proto.plugin;

public final class HaiFriendApplyProto {
  private HaiFriendApplyProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface HaiFriendApplyRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:plugin.HaiFriendApplyRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * 发起好友请求的用户
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    String getSiteUserId();
    /**
     * <pre>
     * 发起好友请求的用户
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getSiteUserIdBytes();

    /**
     * <pre>
     * 目标用户
     * </pre>
     *
     * <code>optional string friend_site_user_id = 2;</code>
     */
    String getFriendSiteUserId();
    /**
     * <pre>
     * 目标用户
     * </pre>
     *
     * <code>optional string friend_site_user_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getFriendSiteUserIdBytes();

    /**
     * <pre>
     * 申请理由
     * </pre>
     *
     * <code>optional string apply_reason = 3;</code>
     */
    String getApplyReason();
    /**
     * <pre>
     * 申请理由
     * </pre>
     *
     * <code>optional string apply_reason = 3;</code>
     */
    com.google.protobuf.ByteString
        getApplyReasonBytes();
  }
  /**
   * <pre>
   **
   *A-&gt;B 发送好友请求
   *----
   *接口名
   *----
   * /hai/friend/apply
   *错误码
   *----
   *- success
   *- error.alert
   * </pre>
   *
   * Protobuf type {@code plugin.HaiFriendApplyRequest}
   */
  public  static final class HaiFriendApplyRequest extends
      com.google.protobuf.GeneratedMessageLite<
          HaiFriendApplyRequest, HaiFriendApplyRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:plugin.HaiFriendApplyRequest)
      HaiFriendApplyRequestOrBuilder {
    private HaiFriendApplyRequest() {
      siteUserId_ = "";
      friendSiteUserId_ = "";
      applyReason_ = "";
    }
    public static final int SITE_USER_ID_FIELD_NUMBER = 1;
    private String siteUserId_;
    /**
     * <pre>
     * 发起好友请求的用户
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    public String getSiteUserId() {
      return siteUserId_;
    }
    /**
     * <pre>
     * 发起好友请求的用户
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSiteUserIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(siteUserId_);
    }
    /**
     * <pre>
     * 发起好友请求的用户
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    private void setSiteUserId(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      siteUserId_ = value;
    }
    /**
     * <pre>
     * 发起好友请求的用户
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    private void clearSiteUserId() {

      siteUserId_ = getDefaultInstance().getSiteUserId();
    }
    /**
     * <pre>
     * 发起好友请求的用户
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    private void setSiteUserIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      siteUserId_ = value.toStringUtf8();
    }

    public static final int FRIEND_SITE_USER_ID_FIELD_NUMBER = 2;
    private String friendSiteUserId_;
    /**
     * <pre>
     * 目标用户
     * </pre>
     *
     * <code>optional string friend_site_user_id = 2;</code>
     */
    public String getFriendSiteUserId() {
      return friendSiteUserId_;
    }
    /**
     * <pre>
     * 目标用户
     * </pre>
     *
     * <code>optional string friend_site_user_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFriendSiteUserIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(friendSiteUserId_);
    }
    /**
     * <pre>
     * 目标用户
     * </pre>
     *
     * <code>optional string friend_site_user_id = 2;</code>
     */
    private void setFriendSiteUserId(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      friendSiteUserId_ = value;
    }
    /**
     * <pre>
     * 目标用户
     * </pre>
     *
     * <code>optional string friend_site_user_id = 2;</code>
     */
    private void clearFriendSiteUserId() {

      friendSiteUserId_ = getDefaultInstance().getFriendSiteUserId();
    }
    /**
     * <pre>
     * 目标用户
     * </pre>
     *
     * <code>optional string friend_site_user_id = 2;</code>
     */
    private void setFriendSiteUserIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      friendSiteUserId_ = value.toStringUtf8();
    }

    public static final int APPLY_REASON_FIELD_NUMBER = 3;
    private String applyReason_;
    /**
     * <pre>
     * 申请理由
     * </pre>
     *
     * <code>optional string apply_reason = 3;</code>
     */
    public String getApplyReason() {
      return applyReason_;
    }
    /**
     * <pre>
     * 申请理由
     * </pre>
     *
     * <code>optional string apply_reason = 3;</code>
     */
    public com.google.protobuf.ByteString
        getApplyReasonBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(applyReason_);
    }
    /**
     * <pre>
     * 申请理由
     * </pre>
     *
     * <code>optional string apply_reason = 3;</code>
     */
    private void setApplyReason(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      applyReason_ = value;
    }
    /**
     * <pre>
     * 申请理由
     * </pre>
     *
     * <code>optional string apply_reason = 3;</code>
     */
    private void clearApplyReason() {

      applyReason_ = getDefaultInstance().getApplyReason();
    }
    /**
     * <pre>
     * 申请理由
     * </pre>
     *
     * <code>optional string apply_reason = 3;</code>
     */
    private void setApplyReasonBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      applyReason_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!siteUserId_.isEmpty()) {
        output.writeString(1, getSiteUserId());
      }
      if (!friendSiteUserId_.isEmpty()) {
        output.writeString(2, getFriendSiteUserId());
      }
      if (!applyReason_.isEmpty()) {
        output.writeString(3, getApplyReason());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!siteUserId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getSiteUserId());
      }
      if (!friendSiteUserId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getFriendSiteUserId());
      }
      if (!applyReason_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getApplyReason());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static HaiFriendApplyRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static HaiFriendApplyRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static HaiFriendApplyRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static HaiFriendApplyRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static HaiFriendApplyRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static HaiFriendApplyRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static HaiFriendApplyRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static HaiFriendApplyRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static HaiFriendApplyRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static HaiFriendApplyRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HaiFriendApplyRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     **
     *A-&gt;B 发送好友请求
     *----
     *接口名
     *----
     * /hai/friend/apply
     *错误码
     *----
     *- success
     *- error.alert
     * </pre>
     *
     * Protobuf type {@code plugin.HaiFriendApplyRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          HaiFriendApplyRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:plugin.HaiFriendApplyRequest)
        HaiFriendApplyRequestOrBuilder {
      // Construct using com.windchat.proto.plugin.HaiFriendApplyProto.HaiFriendApplyRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * 发起好友请求的用户
       * </pre>
       *
       * <code>optional string site_user_id = 1;</code>
       */
      public String getSiteUserId() {
        return instance.getSiteUserId();
      }
      /**
       * <pre>
       * 发起好友请求的用户
       * </pre>
       *
       * <code>optional string site_user_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSiteUserIdBytes() {
        return instance.getSiteUserIdBytes();
      }
      /**
       * <pre>
       * 发起好友请求的用户
       * </pre>
       *
       * <code>optional string site_user_id = 1;</code>
       */
      public Builder setSiteUserId(
          String value) {
        copyOnWrite();
        instance.setSiteUserId(value);
        return this;
      }
      /**
       * <pre>
       * 发起好友请求的用户
       * </pre>
       *
       * <code>optional string site_user_id = 1;</code>
       */
      public Builder clearSiteUserId() {
        copyOnWrite();
        instance.clearSiteUserId();
        return this;
      }
      /**
       * <pre>
       * 发起好友请求的用户
       * </pre>
       *
       * <code>optional string site_user_id = 1;</code>
       */
      public Builder setSiteUserIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSiteUserIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * 目标用户
       * </pre>
       *
       * <code>optional string friend_site_user_id = 2;</code>
       */
      public String getFriendSiteUserId() {
        return instance.getFriendSiteUserId();
      }
      /**
       * <pre>
       * 目标用户
       * </pre>
       *
       * <code>optional string friend_site_user_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFriendSiteUserIdBytes() {
        return instance.getFriendSiteUserIdBytes();
      }
      /**
       * <pre>
       * 目标用户
       * </pre>
       *
       * <code>optional string friend_site_user_id = 2;</code>
       */
      public Builder setFriendSiteUserId(
          String value) {
        copyOnWrite();
        instance.setFriendSiteUserId(value);
        return this;
      }
      /**
       * <pre>
       * 目标用户
       * </pre>
       *
       * <code>optional string friend_site_user_id = 2;</code>
       */
      public Builder clearFriendSiteUserId() {
        copyOnWrite();
        instance.clearFriendSiteUserId();
        return this;
      }
      /**
       * <pre>
       * 目标用户
       * </pre>
       *
       * <code>optional string friend_site_user_id = 2;</code>
       */
      public Builder setFriendSiteUserIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setFriendSiteUserIdBytes(value);
        return this;
      }

      /**
       * <pre>
       * 申请理由
       * </pre>
       *
       * <code>optional string apply_reason = 3;</code>
       */
      public String getApplyReason() {
        return instance.getApplyReason();
      }
      /**
       * <pre>
       * 申请理由
       * </pre>
       *
       * <code>optional string apply_reason = 3;</code>
       */
      public com.google.protobuf.ByteString
          getApplyReasonBytes() {
        return instance.getApplyReasonBytes();
      }
      /**
       * <pre>
       * 申请理由
       * </pre>
       *
       * <code>optional string apply_reason = 3;</code>
       */
      public Builder setApplyReason(
          String value) {
        copyOnWrite();
        instance.setApplyReason(value);
        return this;
      }
      /**
       * <pre>
       * 申请理由
       * </pre>
       *
       * <code>optional string apply_reason = 3;</code>
       */
      public Builder clearApplyReason() {
        copyOnWrite();
        instance.clearApplyReason();
        return this;
      }
      /**
       * <pre>
       * 申请理由
       * </pre>
       *
       * <code>optional string apply_reason = 3;</code>
       */
      public Builder setApplyReasonBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setApplyReasonBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:plugin.HaiFriendApplyRequest)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new HaiFriendApplyRequest();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          HaiFriendApplyRequest other = (HaiFriendApplyRequest) arg1;
          siteUserId_ = visitor.visitString(!siteUserId_.isEmpty(), siteUserId_,
              !other.siteUserId_.isEmpty(), other.siteUserId_);
          friendSiteUserId_ = visitor.visitString(!friendSiteUserId_.isEmpty(), friendSiteUserId_,
              !other.friendSiteUserId_.isEmpty(), other.friendSiteUserId_);
          applyReason_ = visitor.visitString(!applyReason_.isEmpty(), applyReason_,
              !other.applyReason_.isEmpty(), other.applyReason_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  siteUserId_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  friendSiteUserId_ = s;
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  applyReason_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (HaiFriendApplyRequest.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:plugin.HaiFriendApplyRequest)
    private static final HaiFriendApplyRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HaiFriendApplyRequest();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static HaiFriendApplyRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HaiFriendApplyRequest> PARSER;

    public static com.google.protobuf.Parser<HaiFriendApplyRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface HaiFriendApplyResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:plugin.HaiFriendApplyResponse)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code plugin.HaiFriendApplyResponse}
   */
  public  static final class HaiFriendApplyResponse extends
      com.google.protobuf.GeneratedMessageLite<
          HaiFriendApplyResponse, HaiFriendApplyResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:plugin.HaiFriendApplyResponse)
      HaiFriendApplyResponseOrBuilder {
    private HaiFriendApplyResponse() {
    }
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSerializedSize = size;
      return size;
    }

    public static HaiFriendApplyResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static HaiFriendApplyResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static HaiFriendApplyResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static HaiFriendApplyResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static HaiFriendApplyResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static HaiFriendApplyResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static HaiFriendApplyResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static HaiFriendApplyResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static HaiFriendApplyResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static HaiFriendApplyResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HaiFriendApplyResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code plugin.HaiFriendApplyResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          HaiFriendApplyResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:plugin.HaiFriendApplyResponse)
        HaiFriendApplyResponseOrBuilder {
      // Construct using com.windchat.proto.plugin.HaiFriendApplyProto.HaiFriendApplyResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:plugin.HaiFriendApplyResponse)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new HaiFriendApplyResponse();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          HaiFriendApplyResponse other = (HaiFriendApplyResponse) arg1;
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (HaiFriendApplyResponse.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:plugin.HaiFriendApplyResponse)
    private static final HaiFriendApplyResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HaiFriendApplyResponse();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static HaiFriendApplyResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HaiFriendApplyResponse> PARSER;

    public static com.google.protobuf.Parser<HaiFriendApplyResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
