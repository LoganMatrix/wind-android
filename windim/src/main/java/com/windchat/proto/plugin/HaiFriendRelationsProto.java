// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plugin/hai_friend_relations.proto

package com.windchat.proto.plugin;

public final class HaiFriendRelationsProto {
  private HaiFriendRelationsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface HaiFriendRelationsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:plugin.HaiFriendRelationsRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string site_user_id = 1;</code>
     */
    String getSiteUserId();
    /**
     * <code>optional string site_user_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getSiteUserIdBytes();

    /**
     * <pre>
     *需要查询关系的用户ID
     * </pre>
     *
     * <code>repeated string target_site_user_id = 2;</code>
     */
    java.util.List<String>
        getTargetSiteUserIdList();
    /**
     * <pre>
     *需要查询关系的用户ID
     * </pre>
     *
     * <code>repeated string target_site_user_id = 2;</code>
     */
    int getTargetSiteUserIdCount();
    /**
     * <pre>
     *需要查询关系的用户ID
     * </pre>
     *
     * <code>repeated string target_site_user_id = 2;</code>
     */
    String getTargetSiteUserId(int index);
    /**
     * <pre>
     *需要查询关系的用户ID
     * </pre>
     *
     * <code>repeated string target_site_user_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getTargetSiteUserIdBytes(int index);
  }
  /**
   * <pre>
   **
   *获取某用户与其他用户的好友关系
   *----
   *接口名
   *----
   * /hai/friend/relations
   *错误码
   *----
   *- success
   *- error.alert
   * </pre>
   *
   * Protobuf type {@code plugin.HaiFriendRelationsRequest}
   */
  public  static final class HaiFriendRelationsRequest extends
      com.google.protobuf.GeneratedMessageLite<
          HaiFriendRelationsRequest, HaiFriendRelationsRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:plugin.HaiFriendRelationsRequest)
      HaiFriendRelationsRequestOrBuilder {
    private HaiFriendRelationsRequest() {
      siteUserId_ = "";
      targetSiteUserId_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    private int bitField0_;
    public static final int SITE_USER_ID_FIELD_NUMBER = 1;
    private String siteUserId_;
    /**
     * <code>optional string site_user_id = 1;</code>
     */
    public String getSiteUserId() {
      return siteUserId_;
    }
    /**
     * <code>optional string site_user_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSiteUserIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(siteUserId_);
    }
    /**
     * <code>optional string site_user_id = 1;</code>
     */
    private void setSiteUserId(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      siteUserId_ = value;
    }
    /**
     * <code>optional string site_user_id = 1;</code>
     */
    private void clearSiteUserId() {

      siteUserId_ = getDefaultInstance().getSiteUserId();
    }
    /**
     * <code>optional string site_user_id = 1;</code>
     */
    private void setSiteUserIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      siteUserId_ = value.toStringUtf8();
    }

    public static final int TARGET_SITE_USER_ID_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<String> targetSiteUserId_;
    /**
     * <pre>
     *需要查询关系的用户ID
     * </pre>
     *
     * <code>repeated string target_site_user_id = 2;</code>
     */
    public java.util.List<String> getTargetSiteUserIdList() {
      return targetSiteUserId_;
    }
    /**
     * <pre>
     *需要查询关系的用户ID
     * </pre>
     *
     * <code>repeated string target_site_user_id = 2;</code>
     */
    public int getTargetSiteUserIdCount() {
      return targetSiteUserId_.size();
    }
    /**
     * <pre>
     *需要查询关系的用户ID
     * </pre>
     *
     * <code>repeated string target_site_user_id = 2;</code>
     */
    public String getTargetSiteUserId(int index) {
      return targetSiteUserId_.get(index);
    }
    /**
     * <pre>
     *需要查询关系的用户ID
     * </pre>
     *
     * <code>repeated string target_site_user_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTargetSiteUserIdBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          targetSiteUserId_.get(index));
    }
    private void ensureTargetSiteUserIdIsMutable() {
      if (!targetSiteUserId_.isModifiable()) {
        targetSiteUserId_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(targetSiteUserId_);
       }
    }
    /**
     * <pre>
     *需要查询关系的用户ID
     * </pre>
     *
     * <code>repeated string target_site_user_id = 2;</code>
     */
    private void setTargetSiteUserId(
        int index, String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureTargetSiteUserIdIsMutable();
      targetSiteUserId_.set(index, value);
    }
    /**
     * <pre>
     *需要查询关系的用户ID
     * </pre>
     *
     * <code>repeated string target_site_user_id = 2;</code>
     */
    private void addTargetSiteUserId(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureTargetSiteUserIdIsMutable();
      targetSiteUserId_.add(value);
    }
    /**
     * <pre>
     *需要查询关系的用户ID
     * </pre>
     *
     * <code>repeated string target_site_user_id = 2;</code>
     */
    private void addAllTargetSiteUserId(
        Iterable<String> values) {
      ensureTargetSiteUserIdIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, targetSiteUserId_);
    }
    /**
     * <pre>
     *需要查询关系的用户ID
     * </pre>
     *
     * <code>repeated string target_site_user_id = 2;</code>
     */
    private void clearTargetSiteUserId() {
      targetSiteUserId_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <pre>
     *需要查询关系的用户ID
     * </pre>
     *
     * <code>repeated string target_site_user_id = 2;</code>
     */
    private void addTargetSiteUserIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureTargetSiteUserIdIsMutable();
      targetSiteUserId_.add(value.toStringUtf8());
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!siteUserId_.isEmpty()) {
        output.writeString(1, getSiteUserId());
      }
      for (int i = 0; i < targetSiteUserId_.size(); i++) {
        output.writeString(2, targetSiteUserId_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!siteUserId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getSiteUserId());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < targetSiteUserId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(targetSiteUserId_.get(i));
        }
        size += dataSize;
        size += 1 * getTargetSiteUserIdList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static HaiFriendRelationsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static HaiFriendRelationsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static HaiFriendRelationsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static HaiFriendRelationsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static HaiFriendRelationsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static HaiFriendRelationsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static HaiFriendRelationsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static HaiFriendRelationsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static HaiFriendRelationsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static HaiFriendRelationsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HaiFriendRelationsRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     **
     *获取某用户与其他用户的好友关系
     *----
     *接口名
     *----
     * /hai/friend/relations
     *错误码
     *----
     *- success
     *- error.alert
     * </pre>
     *
     * Protobuf type {@code plugin.HaiFriendRelationsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          HaiFriendRelationsRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:plugin.HaiFriendRelationsRequest)
        HaiFriendRelationsRequestOrBuilder {
      // Construct using com.windchat.proto.plugin.HaiFriendRelationsProto.HaiFriendRelationsRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string site_user_id = 1;</code>
       */
      public String getSiteUserId() {
        return instance.getSiteUserId();
      }
      /**
       * <code>optional string site_user_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSiteUserIdBytes() {
        return instance.getSiteUserIdBytes();
      }
      /**
       * <code>optional string site_user_id = 1;</code>
       */
      public Builder setSiteUserId(
          String value) {
        copyOnWrite();
        instance.setSiteUserId(value);
        return this;
      }
      /**
       * <code>optional string site_user_id = 1;</code>
       */
      public Builder clearSiteUserId() {
        copyOnWrite();
        instance.clearSiteUserId();
        return this;
      }
      /**
       * <code>optional string site_user_id = 1;</code>
       */
      public Builder setSiteUserIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSiteUserIdBytes(value);
        return this;
      }

      /**
       * <pre>
       *需要查询关系的用户ID
       * </pre>
       *
       * <code>repeated string target_site_user_id = 2;</code>
       */
      public java.util.List<String>
          getTargetSiteUserIdList() {
        return java.util.Collections.unmodifiableList(
            instance.getTargetSiteUserIdList());
      }
      /**
       * <pre>
       *需要查询关系的用户ID
       * </pre>
       *
       * <code>repeated string target_site_user_id = 2;</code>
       */
      public int getTargetSiteUserIdCount() {
        return instance.getTargetSiteUserIdCount();
      }
      /**
       * <pre>
       *需要查询关系的用户ID
       * </pre>
       *
       * <code>repeated string target_site_user_id = 2;</code>
       */
      public String getTargetSiteUserId(int index) {
        return instance.getTargetSiteUserId(index);
      }
      /**
       * <pre>
       *需要查询关系的用户ID
       * </pre>
       *
       * <code>repeated string target_site_user_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTargetSiteUserIdBytes(int index) {
        return instance.getTargetSiteUserIdBytes(index);
      }
      /**
       * <pre>
       *需要查询关系的用户ID
       * </pre>
       *
       * <code>repeated string target_site_user_id = 2;</code>
       */
      public Builder setTargetSiteUserId(
          int index, String value) {
        copyOnWrite();
        instance.setTargetSiteUserId(index, value);
        return this;
      }
      /**
       * <pre>
       *需要查询关系的用户ID
       * </pre>
       *
       * <code>repeated string target_site_user_id = 2;</code>
       */
      public Builder addTargetSiteUserId(
          String value) {
        copyOnWrite();
        instance.addTargetSiteUserId(value);
        return this;
      }
      /**
       * <pre>
       *需要查询关系的用户ID
       * </pre>
       *
       * <code>repeated string target_site_user_id = 2;</code>
       */
      public Builder addAllTargetSiteUserId(
          Iterable<String> values) {
        copyOnWrite();
        instance.addAllTargetSiteUserId(values);
        return this;
      }
      /**
       * <pre>
       *需要查询关系的用户ID
       * </pre>
       *
       * <code>repeated string target_site_user_id = 2;</code>
       */
      public Builder clearTargetSiteUserId() {
        copyOnWrite();
        instance.clearTargetSiteUserId();
        return this;
      }
      /**
       * <pre>
       *需要查询关系的用户ID
       * </pre>
       *
       * <code>repeated string target_site_user_id = 2;</code>
       */
      public Builder addTargetSiteUserIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addTargetSiteUserIdBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:plugin.HaiFriendRelationsRequest)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new HaiFriendRelationsRequest();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          targetSiteUserId_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          HaiFriendRelationsRequest other = (HaiFriendRelationsRequest) arg1;
          siteUserId_ = visitor.visitString(!siteUserId_.isEmpty(), siteUserId_,
              !other.siteUserId_.isEmpty(), other.siteUserId_);
          targetSiteUserId_= visitor.visitList(targetSiteUserId_, other.targetSiteUserId_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  siteUserId_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();
                  if (!targetSiteUserId_.isModifiable()) {
                    targetSiteUserId_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(targetSiteUserId_);
                  }
                  targetSiteUserId_.add(s);
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (HaiFriendRelationsRequest.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:plugin.HaiFriendRelationsRequest)
    private static final HaiFriendRelationsRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HaiFriendRelationsRequest();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static HaiFriendRelationsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HaiFriendRelationsRequest> PARSER;

    public static com.google.protobuf.Parser<HaiFriendRelationsRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface HaiFriendRelationsResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:plugin.HaiFriendRelationsResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *查询的结果
     * </pre>
     *
     * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
     */
    java.util.List<com.windchat.proto.core.UserProto.UserRelationProfile>
        getUserProfileList();
    /**
     * <pre>
     *查询的结果
     * </pre>
     *
     * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
     */
    com.windchat.proto.core.UserProto.UserRelationProfile getUserProfile(int index);
    /**
     * <pre>
     *查询的结果
     * </pre>
     *
     * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
     */
    int getUserProfileCount();
  }
  /**
   * Protobuf type {@code plugin.HaiFriendRelationsResponse}
   */
  public  static final class HaiFriendRelationsResponse extends
      com.google.protobuf.GeneratedMessageLite<
          HaiFriendRelationsResponse, HaiFriendRelationsResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:plugin.HaiFriendRelationsResponse)
      HaiFriendRelationsResponseOrBuilder {
    private HaiFriendRelationsResponse() {
      userProfile_ = emptyProtobufList();
    }
    public static final int USER_PROFILE_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.windchat.proto.core.UserProto.UserRelationProfile> userProfile_;
    /**
     * <pre>
     *查询的结果
     * </pre>
     *
     * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
     */
    public java.util.List<com.windchat.proto.core.UserProto.UserRelationProfile> getUserProfileList() {
      return userProfile_;
    }
    /**
     * <pre>
     *查询的结果
     * </pre>
     *
     * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
     */
    public java.util.List<? extends com.windchat.proto.core.UserProto.UserRelationProfileOrBuilder>
        getUserProfileOrBuilderList() {
      return userProfile_;
    }
    /**
     * <pre>
     *查询的结果
     * </pre>
     *
     * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
     */
    public int getUserProfileCount() {
      return userProfile_.size();
    }
    /**
     * <pre>
     *查询的结果
     * </pre>
     *
     * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
     */
    public com.windchat.proto.core.UserProto.UserRelationProfile getUserProfile(int index) {
      return userProfile_.get(index);
    }
    /**
     * <pre>
     *查询的结果
     * </pre>
     *
     * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
     */
    public com.windchat.proto.core.UserProto.UserRelationProfileOrBuilder getUserProfileOrBuilder(
        int index) {
      return userProfile_.get(index);
    }
    private void ensureUserProfileIsMutable() {
      if (!userProfile_.isModifiable()) {
        userProfile_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(userProfile_);
       }
    }

    /**
     * <pre>
     *查询的结果
     * </pre>
     *
     * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
     */
    private void setUserProfile(
        int index, com.windchat.proto.core.UserProto.UserRelationProfile value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUserProfileIsMutable();
      userProfile_.set(index, value);
    }
    /**
     * <pre>
     *查询的结果
     * </pre>
     *
     * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
     */
    private void setUserProfile(
        int index, com.windchat.proto.core.UserProto.UserRelationProfile.Builder builderForValue) {
      ensureUserProfileIsMutable();
      userProfile_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *查询的结果
     * </pre>
     *
     * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
     */
    private void addUserProfile(com.windchat.proto.core.UserProto.UserRelationProfile value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUserProfileIsMutable();
      userProfile_.add(value);
    }
    /**
     * <pre>
     *查询的结果
     * </pre>
     *
     * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
     */
    private void addUserProfile(
        int index, com.windchat.proto.core.UserProto.UserRelationProfile value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureUserProfileIsMutable();
      userProfile_.add(index, value);
    }
    /**
     * <pre>
     *查询的结果
     * </pre>
     *
     * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
     */
    private void addUserProfile(
        com.windchat.proto.core.UserProto.UserRelationProfile.Builder builderForValue) {
      ensureUserProfileIsMutable();
      userProfile_.add(builderForValue.build());
    }
    /**
     * <pre>
     *查询的结果
     * </pre>
     *
     * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
     */
    private void addUserProfile(
        int index, com.windchat.proto.core.UserProto.UserRelationProfile.Builder builderForValue) {
      ensureUserProfileIsMutable();
      userProfile_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *查询的结果
     * </pre>
     *
     * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
     */
    private void addAllUserProfile(
        Iterable<? extends com.windchat.proto.core.UserProto.UserRelationProfile> values) {
      ensureUserProfileIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, userProfile_);
    }
    /**
     * <pre>
     *查询的结果
     * </pre>
     *
     * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
     */
    private void clearUserProfile() {
      userProfile_ = emptyProtobufList();
    }
    /**
     * <pre>
     *查询的结果
     * </pre>
     *
     * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
     */
    private void removeUserProfile(int index) {
      ensureUserProfileIsMutable();
      userProfile_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < userProfile_.size(); i++) {
        output.writeMessage(1, userProfile_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < userProfile_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, userProfile_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static HaiFriendRelationsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static HaiFriendRelationsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static HaiFriendRelationsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static HaiFriendRelationsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static HaiFriendRelationsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static HaiFriendRelationsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static HaiFriendRelationsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static HaiFriendRelationsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static HaiFriendRelationsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static HaiFriendRelationsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HaiFriendRelationsResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code plugin.HaiFriendRelationsResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          HaiFriendRelationsResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:plugin.HaiFriendRelationsResponse)
        HaiFriendRelationsResponseOrBuilder {
      // Construct using com.windchat.proto.plugin.HaiFriendRelationsProto.HaiFriendRelationsResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *查询的结果
       * </pre>
       *
       * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
       */
      public java.util.List<com.windchat.proto.core.UserProto.UserRelationProfile> getUserProfileList() {
        return java.util.Collections.unmodifiableList(
            instance.getUserProfileList());
      }
      /**
       * <pre>
       *查询的结果
       * </pre>
       *
       * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
       */
      public int getUserProfileCount() {
        return instance.getUserProfileCount();
      }/**
       * <pre>
       *查询的结果
       * </pre>
       *
       * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
       */
      public com.windchat.proto.core.UserProto.UserRelationProfile getUserProfile(int index) {
        return instance.getUserProfile(index);
      }
      /**
       * <pre>
       *查询的结果
       * </pre>
       *
       * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
       */
      public Builder setUserProfile(
          int index, com.windchat.proto.core.UserProto.UserRelationProfile value) {
        copyOnWrite();
        instance.setUserProfile(index, value);
        return this;
      }
      /**
       * <pre>
       *查询的结果
       * </pre>
       *
       * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
       */
      public Builder setUserProfile(
          int index, com.windchat.proto.core.UserProto.UserRelationProfile.Builder builderForValue) {
        copyOnWrite();
        instance.setUserProfile(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *查询的结果
       * </pre>
       *
       * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
       */
      public Builder addUserProfile(com.windchat.proto.core.UserProto.UserRelationProfile value) {
        copyOnWrite();
        instance.addUserProfile(value);
        return this;
      }
      /**
       * <pre>
       *查询的结果
       * </pre>
       *
       * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
       */
      public Builder addUserProfile(
          int index, com.windchat.proto.core.UserProto.UserRelationProfile value) {
        copyOnWrite();
        instance.addUserProfile(index, value);
        return this;
      }
      /**
       * <pre>
       *查询的结果
       * </pre>
       *
       * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
       */
      public Builder addUserProfile(
          com.windchat.proto.core.UserProto.UserRelationProfile.Builder builderForValue) {
        copyOnWrite();
        instance.addUserProfile(builderForValue);
        return this;
      }
      /**
       * <pre>
       *查询的结果
       * </pre>
       *
       * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
       */
      public Builder addUserProfile(
          int index, com.windchat.proto.core.UserProto.UserRelationProfile.Builder builderForValue) {
        copyOnWrite();
        instance.addUserProfile(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *查询的结果
       * </pre>
       *
       * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
       */
      public Builder addAllUserProfile(
          Iterable<? extends com.windchat.proto.core.UserProto.UserRelationProfile> values) {
        copyOnWrite();
        instance.addAllUserProfile(values);
        return this;
      }
      /**
       * <pre>
       *查询的结果
       * </pre>
       *
       * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
       */
      public Builder clearUserProfile() {
        copyOnWrite();
        instance.clearUserProfile();
        return this;
      }
      /**
       * <pre>
       *查询的结果
       * </pre>
       *
       * <code>repeated .core.UserRelationProfile user_profile = 1;</code>
       */
      public Builder removeUserProfile(int index) {
        copyOnWrite();
        instance.removeUserProfile(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:plugin.HaiFriendRelationsResponse)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new HaiFriendRelationsResponse();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          userProfile_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          HaiFriendRelationsResponse other = (HaiFriendRelationsResponse) arg1;
          userProfile_= visitor.visitList(userProfile_, other.userProfile_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!userProfile_.isModifiable()) {
                    userProfile_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(userProfile_);
                  }
                  userProfile_.add(
                      input.readMessage(com.windchat.proto.core.UserProto.UserRelationProfile.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (HaiFriendRelationsResponse.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:plugin.HaiFriendRelationsResponse)
    private static final HaiFriendRelationsResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HaiFriendRelationsResponse();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static HaiFriendRelationsResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HaiFriendRelationsResponse> PARSER;

    public static com.google.protobuf.Parser<HaiFriendRelationsResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
