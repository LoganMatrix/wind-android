// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plugin/hai_push_notices.proto

package com.windchat.proto.plugin;

public final class HaiPushNoticesProto {
  private HaiPushNoticesProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface HaiPushNoticesRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:plugin.HaiPushNoticesRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *push通知的title(副标题)，客户端主标题展示站点名称
     * </pre>
     *
     * <code>optional string subtitle = 1;</code>
     */
    String getSubtitle();
    /**
     * <pre>
     *push通知的title(副标题)，客户端主标题展示站点名称
     * </pre>
     *
     * <code>optional string subtitle = 1;</code>
     */
    com.google.protobuf.ByteString
        getSubtitleBytes();

    /**
     * <pre>
     *通知的内容
     * </pre>
     *
     * <code>optional string content = 2;</code>
     */
    String getContent();
    /**
     * <pre>
     *通知的内容
     * </pre>
     *
     * <code>optional string content = 2;</code>
     */
    com.google.protobuf.ByteString
        getContentBytes();

    /**
     * <pre>
     *通知的跳转，可以为空。
     * </pre>
     *
     * <code>optional string push_goto = 3;</code>
     */
    String getPushGoto();
    /**
     * <pre>
     *通知的跳转，可以为空。
     * </pre>
     *
     * <code>optional string push_goto = 3;</code>
     */
    com.google.protobuf.ByteString
        getPushGotoBytes();
  }
  /**
   * <pre>
   **
   *向全员推送消息通知
   *----
   *接口名
   *----
   * /hai/push/notices
   *错误码
   *----
   *- success
   *- error.alert
   * </pre>
   *
   * Protobuf type {@code plugin.HaiPushNoticesRequest}
   */
  public  static final class HaiPushNoticesRequest extends
      com.google.protobuf.GeneratedMessageLite<
          HaiPushNoticesRequest, HaiPushNoticesRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:plugin.HaiPushNoticesRequest)
      HaiPushNoticesRequestOrBuilder {
    private HaiPushNoticesRequest() {
      subtitle_ = "";
      content_ = "";
      pushGoto_ = "";
    }
    public static final int SUBTITLE_FIELD_NUMBER = 1;
    private String subtitle_;
    /**
     * <pre>
     *push通知的title(副标题)，客户端主标题展示站点名称
     * </pre>
     *
     * <code>optional string subtitle = 1;</code>
     */
    public String getSubtitle() {
      return subtitle_;
    }
    /**
     * <pre>
     *push通知的title(副标题)，客户端主标题展示站点名称
     * </pre>
     *
     * <code>optional string subtitle = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSubtitleBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(subtitle_);
    }
    /**
     * <pre>
     *push通知的title(副标题)，客户端主标题展示站点名称
     * </pre>
     *
     * <code>optional string subtitle = 1;</code>
     */
    private void setSubtitle(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      subtitle_ = value;
    }
    /**
     * <pre>
     *push通知的title(副标题)，客户端主标题展示站点名称
     * </pre>
     *
     * <code>optional string subtitle = 1;</code>
     */
    private void clearSubtitle() {

      subtitle_ = getDefaultInstance().getSubtitle();
    }
    /**
     * <pre>
     *push通知的title(副标题)，客户端主标题展示站点名称
     * </pre>
     *
     * <code>optional string subtitle = 1;</code>
     */
    private void setSubtitleBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      subtitle_ = value.toStringUtf8();
    }

    public static final int CONTENT_FIELD_NUMBER = 2;
    private String content_;
    /**
     * <pre>
     *通知的内容
     * </pre>
     *
     * <code>optional string content = 2;</code>
     */
    public String getContent() {
      return content_;
    }
    /**
     * <pre>
     *通知的内容
     * </pre>
     *
     * <code>optional string content = 2;</code>
     */
    public com.google.protobuf.ByteString
        getContentBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(content_);
    }
    /**
     * <pre>
     *通知的内容
     * </pre>
     *
     * <code>optional string content = 2;</code>
     */
    private void setContent(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      content_ = value;
    }
    /**
     * <pre>
     *通知的内容
     * </pre>
     *
     * <code>optional string content = 2;</code>
     */
    private void clearContent() {

      content_ = getDefaultInstance().getContent();
    }
    /**
     * <pre>
     *通知的内容
     * </pre>
     *
     * <code>optional string content = 2;</code>
     */
    private void setContentBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      content_ = value.toStringUtf8();
    }

    public static final int PUSH_GOTO_FIELD_NUMBER = 3;
    private String pushGoto_;
    /**
     * <pre>
     *通知的跳转，可以为空。
     * </pre>
     *
     * <code>optional string push_goto = 3;</code>
     */
    public String getPushGoto() {
      return pushGoto_;
    }
    /**
     * <pre>
     *通知的跳转，可以为空。
     * </pre>
     *
     * <code>optional string push_goto = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPushGotoBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(pushGoto_);
    }
    /**
     * <pre>
     *通知的跳转，可以为空。
     * </pre>
     *
     * <code>optional string push_goto = 3;</code>
     */
    private void setPushGoto(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      pushGoto_ = value;
    }
    /**
     * <pre>
     *通知的跳转，可以为空。
     * </pre>
     *
     * <code>optional string push_goto = 3;</code>
     */
    private void clearPushGoto() {

      pushGoto_ = getDefaultInstance().getPushGoto();
    }
    /**
     * <pre>
     *通知的跳转，可以为空。
     * </pre>
     *
     * <code>optional string push_goto = 3;</code>
     */
    private void setPushGotoBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      pushGoto_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!subtitle_.isEmpty()) {
        output.writeString(1, getSubtitle());
      }
      if (!content_.isEmpty()) {
        output.writeString(2, getContent());
      }
      if (!pushGoto_.isEmpty()) {
        output.writeString(3, getPushGoto());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!subtitle_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getSubtitle());
      }
      if (!content_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getContent());
      }
      if (!pushGoto_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getPushGoto());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static HaiPushNoticesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static HaiPushNoticesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static HaiPushNoticesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static HaiPushNoticesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static HaiPushNoticesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static HaiPushNoticesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static HaiPushNoticesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static HaiPushNoticesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static HaiPushNoticesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static HaiPushNoticesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HaiPushNoticesRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     **
     *向全员推送消息通知
     *----
     *接口名
     *----
     * /hai/push/notices
     *错误码
     *----
     *- success
     *- error.alert
     * </pre>
     *
     * Protobuf type {@code plugin.HaiPushNoticesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          HaiPushNoticesRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:plugin.HaiPushNoticesRequest)
        HaiPushNoticesRequestOrBuilder {
      // Construct using com.windchat.proto.plugin.HaiPushNoticesProto.HaiPushNoticesRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *push通知的title(副标题)，客户端主标题展示站点名称
       * </pre>
       *
       * <code>optional string subtitle = 1;</code>
       */
      public String getSubtitle() {
        return instance.getSubtitle();
      }
      /**
       * <pre>
       *push通知的title(副标题)，客户端主标题展示站点名称
       * </pre>
       *
       * <code>optional string subtitle = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSubtitleBytes() {
        return instance.getSubtitleBytes();
      }
      /**
       * <pre>
       *push通知的title(副标题)，客户端主标题展示站点名称
       * </pre>
       *
       * <code>optional string subtitle = 1;</code>
       */
      public Builder setSubtitle(
          String value) {
        copyOnWrite();
        instance.setSubtitle(value);
        return this;
      }
      /**
       * <pre>
       *push通知的title(副标题)，客户端主标题展示站点名称
       * </pre>
       *
       * <code>optional string subtitle = 1;</code>
       */
      public Builder clearSubtitle() {
        copyOnWrite();
        instance.clearSubtitle();
        return this;
      }
      /**
       * <pre>
       *push通知的title(副标题)，客户端主标题展示站点名称
       * </pre>
       *
       * <code>optional string subtitle = 1;</code>
       */
      public Builder setSubtitleBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSubtitleBytes(value);
        return this;
      }

      /**
       * <pre>
       *通知的内容
       * </pre>
       *
       * <code>optional string content = 2;</code>
       */
      public String getContent() {
        return instance.getContent();
      }
      /**
       * <pre>
       *通知的内容
       * </pre>
       *
       * <code>optional string content = 2;</code>
       */
      public com.google.protobuf.ByteString
          getContentBytes() {
        return instance.getContentBytes();
      }
      /**
       * <pre>
       *通知的内容
       * </pre>
       *
       * <code>optional string content = 2;</code>
       */
      public Builder setContent(
          String value) {
        copyOnWrite();
        instance.setContent(value);
        return this;
      }
      /**
       * <pre>
       *通知的内容
       * </pre>
       *
       * <code>optional string content = 2;</code>
       */
      public Builder clearContent() {
        copyOnWrite();
        instance.clearContent();
        return this;
      }
      /**
       * <pre>
       *通知的内容
       * </pre>
       *
       * <code>optional string content = 2;</code>
       */
      public Builder setContentBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setContentBytes(value);
        return this;
      }

      /**
       * <pre>
       *通知的跳转，可以为空。
       * </pre>
       *
       * <code>optional string push_goto = 3;</code>
       */
      public String getPushGoto() {
        return instance.getPushGoto();
      }
      /**
       * <pre>
       *通知的跳转，可以为空。
       * </pre>
       *
       * <code>optional string push_goto = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPushGotoBytes() {
        return instance.getPushGotoBytes();
      }
      /**
       * <pre>
       *通知的跳转，可以为空。
       * </pre>
       *
       * <code>optional string push_goto = 3;</code>
       */
      public Builder setPushGoto(
          String value) {
        copyOnWrite();
        instance.setPushGoto(value);
        return this;
      }
      /**
       * <pre>
       *通知的跳转，可以为空。
       * </pre>
       *
       * <code>optional string push_goto = 3;</code>
       */
      public Builder clearPushGoto() {
        copyOnWrite();
        instance.clearPushGoto();
        return this;
      }
      /**
       * <pre>
       *通知的跳转，可以为空。
       * </pre>
       *
       * <code>optional string push_goto = 3;</code>
       */
      public Builder setPushGotoBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPushGotoBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:plugin.HaiPushNoticesRequest)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new HaiPushNoticesRequest();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          HaiPushNoticesRequest other = (HaiPushNoticesRequest) arg1;
          subtitle_ = visitor.visitString(!subtitle_.isEmpty(), subtitle_,
              !other.subtitle_.isEmpty(), other.subtitle_);
          content_ = visitor.visitString(!content_.isEmpty(), content_,
              !other.content_.isEmpty(), other.content_);
          pushGoto_ = visitor.visitString(!pushGoto_.isEmpty(), pushGoto_,
              !other.pushGoto_.isEmpty(), other.pushGoto_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  subtitle_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  content_ = s;
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  pushGoto_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (HaiPushNoticesRequest.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:plugin.HaiPushNoticesRequest)
    private static final HaiPushNoticesRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HaiPushNoticesRequest();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static HaiPushNoticesRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HaiPushNoticesRequest> PARSER;

    public static com.google.protobuf.Parser<HaiPushNoticesRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface HaiPushNoticesResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:plugin.HaiPushNoticesResponse)
      com.google.protobuf.MessageLiteOrBuilder {
  }
  /**
   * Protobuf type {@code plugin.HaiPushNoticesResponse}
   */
  public  static final class HaiPushNoticesResponse extends
      com.google.protobuf.GeneratedMessageLite<
          HaiPushNoticesResponse, HaiPushNoticesResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:plugin.HaiPushNoticesResponse)
      HaiPushNoticesResponseOrBuilder {
    private HaiPushNoticesResponse() {
    }
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSerializedSize = size;
      return size;
    }

    public static HaiPushNoticesResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static HaiPushNoticesResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static HaiPushNoticesResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static HaiPushNoticesResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static HaiPushNoticesResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static HaiPushNoticesResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static HaiPushNoticesResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static HaiPushNoticesResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static HaiPushNoticesResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static HaiPushNoticesResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HaiPushNoticesResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code plugin.HaiPushNoticesResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          HaiPushNoticesResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:plugin.HaiPushNoticesResponse)
        HaiPushNoticesResponseOrBuilder {
      // Construct using com.windchat.proto.plugin.HaiPushNoticesProto.HaiPushNoticesResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      // @@protoc_insertion_point(builder_scope:plugin.HaiPushNoticesResponse)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new HaiPushNoticesResponse();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          HaiPushNoticesResponse other = (HaiPushNoticesResponse) arg1;
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (HaiPushNoticesResponse.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:plugin.HaiPushNoticesResponse)
    private static final HaiPushNoticesResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HaiPushNoticesResponse();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static HaiPushNoticesResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HaiPushNoticesResponse> PARSER;

    public static com.google.protobuf.Parser<HaiPushNoticesResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
