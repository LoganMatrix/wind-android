// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plugin/hai_session_profile.proto

package com.windchat.proto.plugin;

public final class HaiSessionProfileProto {
  private HaiSessionProfileProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface HaiSessionProfileRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:plugin.HaiSessionProfileRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *用户的sessionid，base64_safe_url
     * </pre>
     *
     * <code>optional string base64_safe_url_session_id = 1;</code>
     */
    String getBase64SafeUrlSessionId();
    /**
     * <pre>
     *用户的sessionid，base64_safe_url
     * </pre>
     *
     * <code>optional string base64_safe_url_session_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getBase64SafeUrlSessionIdBytes();
  }
  /**
   * <pre>
   **
   *通过用户session获取用户资料
   *----
   *接口名
   *----
   * /hai/session/profile
   *错误码
   *----
   * success
   * error.alert
   * </pre>
   *
   * Protobuf type {@code plugin.HaiSessionProfileRequest}
   */
  public  static final class HaiSessionProfileRequest extends
      com.google.protobuf.GeneratedMessageLite<
          HaiSessionProfileRequest, HaiSessionProfileRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:plugin.HaiSessionProfileRequest)
      HaiSessionProfileRequestOrBuilder {
    private HaiSessionProfileRequest() {
      base64SafeUrlSessionId_ = "";
    }
    public static final int BASE64_SAFE_URL_SESSION_ID_FIELD_NUMBER = 1;
    private String base64SafeUrlSessionId_;
    /**
     * <pre>
     *用户的sessionid，base64_safe_url
     * </pre>
     *
     * <code>optional string base64_safe_url_session_id = 1;</code>
     */
    public String getBase64SafeUrlSessionId() {
      return base64SafeUrlSessionId_;
    }
    /**
     * <pre>
     *用户的sessionid，base64_safe_url
     * </pre>
     *
     * <code>optional string base64_safe_url_session_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getBase64SafeUrlSessionIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(base64SafeUrlSessionId_);
    }
    /**
     * <pre>
     *用户的sessionid，base64_safe_url
     * </pre>
     *
     * <code>optional string base64_safe_url_session_id = 1;</code>
     */
    private void setBase64SafeUrlSessionId(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      base64SafeUrlSessionId_ = value;
    }
    /**
     * <pre>
     *用户的sessionid，base64_safe_url
     * </pre>
     *
     * <code>optional string base64_safe_url_session_id = 1;</code>
     */
    private void clearBase64SafeUrlSessionId() {

      base64SafeUrlSessionId_ = getDefaultInstance().getBase64SafeUrlSessionId();
    }
    /**
     * <pre>
     *用户的sessionid，base64_safe_url
     * </pre>
     *
     * <code>optional string base64_safe_url_session_id = 1;</code>
     */
    private void setBase64SafeUrlSessionIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      base64SafeUrlSessionId_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!base64SafeUrlSessionId_.isEmpty()) {
        output.writeString(1, getBase64SafeUrlSessionId());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!base64SafeUrlSessionId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getBase64SafeUrlSessionId());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static HaiSessionProfileRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static HaiSessionProfileRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static HaiSessionProfileRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static HaiSessionProfileRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static HaiSessionProfileRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static HaiSessionProfileRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static HaiSessionProfileRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static HaiSessionProfileRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static HaiSessionProfileRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static HaiSessionProfileRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HaiSessionProfileRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     **
     *通过用户session获取用户资料
     *----
     *接口名
     *----
     * /hai/session/profile
     *错误码
     *----
     * success
     * error.alert
     * </pre>
     *
     * Protobuf type {@code plugin.HaiSessionProfileRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          HaiSessionProfileRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:plugin.HaiSessionProfileRequest)
        HaiSessionProfileRequestOrBuilder {
      // Construct using com.windchat.proto.plugin.HaiSessionProfileProto.HaiSessionProfileRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *用户的sessionid，base64_safe_url
       * </pre>
       *
       * <code>optional string base64_safe_url_session_id = 1;</code>
       */
      public String getBase64SafeUrlSessionId() {
        return instance.getBase64SafeUrlSessionId();
      }
      /**
       * <pre>
       *用户的sessionid，base64_safe_url
       * </pre>
       *
       * <code>optional string base64_safe_url_session_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getBase64SafeUrlSessionIdBytes() {
        return instance.getBase64SafeUrlSessionIdBytes();
      }
      /**
       * <pre>
       *用户的sessionid，base64_safe_url
       * </pre>
       *
       * <code>optional string base64_safe_url_session_id = 1;</code>
       */
      public Builder setBase64SafeUrlSessionId(
          String value) {
        copyOnWrite();
        instance.setBase64SafeUrlSessionId(value);
        return this;
      }
      /**
       * <pre>
       *用户的sessionid，base64_safe_url
       * </pre>
       *
       * <code>optional string base64_safe_url_session_id = 1;</code>
       */
      public Builder clearBase64SafeUrlSessionId() {
        copyOnWrite();
        instance.clearBase64SafeUrlSessionId();
        return this;
      }
      /**
       * <pre>
       *用户的sessionid，base64_safe_url
       * </pre>
       *
       * <code>optional string base64_safe_url_session_id = 1;</code>
       */
      public Builder setBase64SafeUrlSessionIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setBase64SafeUrlSessionIdBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:plugin.HaiSessionProfileRequest)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new HaiSessionProfileRequest();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          HaiSessionProfileRequest other = (HaiSessionProfileRequest) arg1;
          base64SafeUrlSessionId_ = visitor.visitString(!base64SafeUrlSessionId_.isEmpty(), base64SafeUrlSessionId_,
              !other.base64SafeUrlSessionId_.isEmpty(), other.base64SafeUrlSessionId_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  base64SafeUrlSessionId_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (HaiSessionProfileRequest.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:plugin.HaiSessionProfileRequest)
    private static final HaiSessionProfileRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HaiSessionProfileRequest();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static HaiSessionProfileRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HaiSessionProfileRequest> PARSER;

    public static com.google.protobuf.Parser<HaiSessionProfileRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface HaiSessionProfileResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:plugin.HaiSessionProfileResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *需要查找的用户
     * </pre>
     *
     * <code>optional .core.UserProfile user_profile = 1;</code>
     */
    boolean hasUserProfile();
    /**
     * <pre>
     *需要查找的用户
     * </pre>
     *
     * <code>optional .core.UserProfile user_profile = 1;</code>
     */
    com.windchat.proto.core.UserProto.UserProfile getUserProfile();
  }
  /**
   * Protobuf type {@code plugin.HaiSessionProfileResponse}
   */
  public  static final class HaiSessionProfileResponse extends
      com.google.protobuf.GeneratedMessageLite<
          HaiSessionProfileResponse, HaiSessionProfileResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:plugin.HaiSessionProfileResponse)
      HaiSessionProfileResponseOrBuilder {
    private HaiSessionProfileResponse() {
    }
    public static final int USER_PROFILE_FIELD_NUMBER = 1;
    private com.windchat.proto.core.UserProto.UserProfile userProfile_;
    /**
     * <pre>
     *需要查找的用户
     * </pre>
     *
     * <code>optional .core.UserProfile user_profile = 1;</code>
     */
    public boolean hasUserProfile() {
      return userProfile_ != null;
    }
    /**
     * <pre>
     *需要查找的用户
     * </pre>
     *
     * <code>optional .core.UserProfile user_profile = 1;</code>
     */
    public com.windchat.proto.core.UserProto.UserProfile getUserProfile() {
      return userProfile_ == null ? com.windchat.proto.core.UserProto.UserProfile.getDefaultInstance() : userProfile_;
    }
    /**
     * <pre>
     *需要查找的用户
     * </pre>
     *
     * <code>optional .core.UserProfile user_profile = 1;</code>
     */
    private void setUserProfile(com.windchat.proto.core.UserProto.UserProfile value) {
      if (value == null) {
        throw new NullPointerException();
      }
      userProfile_ = value;

      }
    /**
     * <pre>
     *需要查找的用户
     * </pre>
     *
     * <code>optional .core.UserProfile user_profile = 1;</code>
     */
    private void setUserProfile(
        com.windchat.proto.core.UserProto.UserProfile.Builder builderForValue) {
      userProfile_ = builderForValue.build();

    }
    /**
     * <pre>
     *需要查找的用户
     * </pre>
     *
     * <code>optional .core.UserProfile user_profile = 1;</code>
     */
    private void mergeUserProfile(com.windchat.proto.core.UserProto.UserProfile value) {
      if (userProfile_ != null &&
          userProfile_ != com.windchat.proto.core.UserProto.UserProfile.getDefaultInstance()) {
        userProfile_ =
          com.windchat.proto.core.UserProto.UserProfile.newBuilder(userProfile_).mergeFrom(value).buildPartial();
      } else {
        userProfile_ = value;
      }

    }
    /**
     * <pre>
     *需要查找的用户
     * </pre>
     *
     * <code>optional .core.UserProfile user_profile = 1;</code>
     */
    private void clearUserProfile() {  userProfile_ = null;

    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (userProfile_ != null) {
        output.writeMessage(1, getUserProfile());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (userProfile_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getUserProfile());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static HaiSessionProfileResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static HaiSessionProfileResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static HaiSessionProfileResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static HaiSessionProfileResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static HaiSessionProfileResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static HaiSessionProfileResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static HaiSessionProfileResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static HaiSessionProfileResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static HaiSessionProfileResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static HaiSessionProfileResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HaiSessionProfileResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code plugin.HaiSessionProfileResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          HaiSessionProfileResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:plugin.HaiSessionProfileResponse)
        HaiSessionProfileResponseOrBuilder {
      // Construct using com.windchat.proto.plugin.HaiSessionProfileProto.HaiSessionProfileResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *需要查找的用户
       * </pre>
       *
       * <code>optional .core.UserProfile user_profile = 1;</code>
       */
      public boolean hasUserProfile() {
        return instance.hasUserProfile();
      }
      /**
       * <pre>
       *需要查找的用户
       * </pre>
       *
       * <code>optional .core.UserProfile user_profile = 1;</code>
       */
      public com.windchat.proto.core.UserProto.UserProfile getUserProfile() {
        return instance.getUserProfile();
      }
      /**
       * <pre>
       *需要查找的用户
       * </pre>
       *
       * <code>optional .core.UserProfile user_profile = 1;</code>
       */
      public Builder setUserProfile(com.windchat.proto.core.UserProto.UserProfile value) {
        copyOnWrite();
        instance.setUserProfile(value);
        return this;
        }
      /**
       * <pre>
       *需要查找的用户
       * </pre>
       *
       * <code>optional .core.UserProfile user_profile = 1;</code>
       */
      public Builder setUserProfile(
          com.windchat.proto.core.UserProto.UserProfile.Builder builderForValue) {
        copyOnWrite();
        instance.setUserProfile(builderForValue);
        return this;
      }
      /**
       * <pre>
       *需要查找的用户
       * </pre>
       *
       * <code>optional .core.UserProfile user_profile = 1;</code>
       */
      public Builder mergeUserProfile(com.windchat.proto.core.UserProto.UserProfile value) {
        copyOnWrite();
        instance.mergeUserProfile(value);
        return this;
      }
      /**
       * <pre>
       *需要查找的用户
       * </pre>
       *
       * <code>optional .core.UserProfile user_profile = 1;</code>
       */
      public Builder clearUserProfile() {  copyOnWrite();
        instance.clearUserProfile();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:plugin.HaiSessionProfileResponse)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new HaiSessionProfileResponse();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          HaiSessionProfileResponse other = (HaiSessionProfileResponse) arg1;
          userProfile_ = visitor.visitMessage(userProfile_, other.userProfile_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  com.windchat.proto.core.UserProto.UserProfile.Builder subBuilder = null;
                  if (userProfile_ != null) {
                    subBuilder = userProfile_.toBuilder();
                  }
                  userProfile_ = input.readMessage(com.windchat.proto.core.UserProto.UserProfile.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(userProfile_);
                    userProfile_ = subBuilder.buildPartial();
                  }

                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (HaiSessionProfileResponse.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:plugin.HaiSessionProfileResponse)
    private static final HaiSessionProfileResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HaiSessionProfileResponse();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static HaiSessionProfileResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HaiSessionProfileResponse> PARSER;

    public static com.google.protobuf.Parser<HaiSessionProfileResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
