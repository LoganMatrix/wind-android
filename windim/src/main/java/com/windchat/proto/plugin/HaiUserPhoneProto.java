// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plugin/hai_user_phone.proto

package com.windchat.proto.plugin;

public final class HaiUserPhoneProto {
  private HaiUserPhoneProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface HaiUserPhoneRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:plugin.HaiUserPhoneRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *用户的站点ID
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    String getSiteUserId();
    /**
     * <pre>
     *用户的站点ID
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getSiteUserIdBytes();
  }
  /**
   * <pre>
   **
   *!! 这个文件需要重命名 !!
   *获取用户手机号
   *----
   *只有实名站点，才能获取此数据。
   *接口名
   *----
   * /hai/user/phone
   *错误码
   *----
   *- success
   *- error.alert
   * </pre>
   *
   * Protobuf type {@code plugin.HaiUserPhoneRequest}
   */
  public  static final class HaiUserPhoneRequest extends
      com.google.protobuf.GeneratedMessageLite<
          HaiUserPhoneRequest, HaiUserPhoneRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:plugin.HaiUserPhoneRequest)
      HaiUserPhoneRequestOrBuilder {
    private HaiUserPhoneRequest() {
      siteUserId_ = "";
    }
    public static final int SITE_USER_ID_FIELD_NUMBER = 1;
    private String siteUserId_;
    /**
     * <pre>
     *用户的站点ID
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    public String getSiteUserId() {
      return siteUserId_;
    }
    /**
     * <pre>
     *用户的站点ID
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSiteUserIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(siteUserId_);
    }
    /**
     * <pre>
     *用户的站点ID
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    private void setSiteUserId(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      siteUserId_ = value;
    }
    /**
     * <pre>
     *用户的站点ID
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    private void clearSiteUserId() {

      siteUserId_ = getDefaultInstance().getSiteUserId();
    }
    /**
     * <pre>
     *用户的站点ID
     * </pre>
     *
     * <code>optional string site_user_id = 1;</code>
     */
    private void setSiteUserIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      siteUserId_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!siteUserId_.isEmpty()) {
        output.writeString(1, getSiteUserId());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!siteUserId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getSiteUserId());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static HaiUserPhoneRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static HaiUserPhoneRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static HaiUserPhoneRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static HaiUserPhoneRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static HaiUserPhoneRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static HaiUserPhoneRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static HaiUserPhoneRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static HaiUserPhoneRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static HaiUserPhoneRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static HaiUserPhoneRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HaiUserPhoneRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     **
     *!! 这个文件需要重命名 !!
     *获取用户手机号
     *----
     *只有实名站点，才能获取此数据。
     *接口名
     *----
     * /hai/user/phone
     *错误码
     *----
     *- success
     *- error.alert
     * </pre>
     *
     * Protobuf type {@code plugin.HaiUserPhoneRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          HaiUserPhoneRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:plugin.HaiUserPhoneRequest)
        HaiUserPhoneRequestOrBuilder {
      // Construct using com.windchat.proto.plugin.HaiUserPhoneProto.HaiUserPhoneRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *用户的站点ID
       * </pre>
       *
       * <code>optional string site_user_id = 1;</code>
       */
      public String getSiteUserId() {
        return instance.getSiteUserId();
      }
      /**
       * <pre>
       *用户的站点ID
       * </pre>
       *
       * <code>optional string site_user_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSiteUserIdBytes() {
        return instance.getSiteUserIdBytes();
      }
      /**
       * <pre>
       *用户的站点ID
       * </pre>
       *
       * <code>optional string site_user_id = 1;</code>
       */
      public Builder setSiteUserId(
          String value) {
        copyOnWrite();
        instance.setSiteUserId(value);
        return this;
      }
      /**
       * <pre>
       *用户的站点ID
       * </pre>
       *
       * <code>optional string site_user_id = 1;</code>
       */
      public Builder clearSiteUserId() {
        copyOnWrite();
        instance.clearSiteUserId();
        return this;
      }
      /**
       * <pre>
       *用户的站点ID
       * </pre>
       *
       * <code>optional string site_user_id = 1;</code>
       */
      public Builder setSiteUserIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSiteUserIdBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:plugin.HaiUserPhoneRequest)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new HaiUserPhoneRequest();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          HaiUserPhoneRequest other = (HaiUserPhoneRequest) arg1;
          siteUserId_ = visitor.visitString(!siteUserId_.isEmpty(), siteUserId_,
              !other.siteUserId_.isEmpty(), other.siteUserId_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  siteUserId_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (HaiUserPhoneRequest.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:plugin.HaiUserPhoneRequest)
    private static final HaiUserPhoneRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HaiUserPhoneRequest();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static HaiUserPhoneRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HaiUserPhoneRequest> PARSER;

    public static com.google.protobuf.Parser<HaiUserPhoneRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface HaiUserPhoneResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:plugin.HaiUserPhoneResponse)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *国际区号+86
     * </pre>
     *
     * <code>optional string country_code = 1;</code>
     */
    String getCountryCode();
    /**
     * <pre>
     *国际区号+86
     * </pre>
     *
     * <code>optional string country_code = 1;</code>
     */
    com.google.protobuf.ByteString
        getCountryCodeBytes();

    /**
     * <pre>
     *手机号
     * </pre>
     *
     * <code>optional string phone_id = 2;</code>
     */
    String getPhoneId();
    /**
     * <pre>
     *手机号
     * </pre>
     *
     * <code>optional string phone_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getPhoneIdBytes();
  }
  /**
   * Protobuf type {@code plugin.HaiUserPhoneResponse}
   */
  public  static final class HaiUserPhoneResponse extends
      com.google.protobuf.GeneratedMessageLite<
          HaiUserPhoneResponse, HaiUserPhoneResponse.Builder> implements
      // @@protoc_insertion_point(message_implements:plugin.HaiUserPhoneResponse)
      HaiUserPhoneResponseOrBuilder {
    private HaiUserPhoneResponse() {
      countryCode_ = "";
      phoneId_ = "";
    }
    public static final int COUNTRY_CODE_FIELD_NUMBER = 1;
    private String countryCode_;
    /**
     * <pre>
     *国际区号+86
     * </pre>
     *
     * <code>optional string country_code = 1;</code>
     */
    public String getCountryCode() {
      return countryCode_;
    }
    /**
     * <pre>
     *国际区号+86
     * </pre>
     *
     * <code>optional string country_code = 1;</code>
     */
    public com.google.protobuf.ByteString
        getCountryCodeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(countryCode_);
    }
    /**
     * <pre>
     *国际区号+86
     * </pre>
     *
     * <code>optional string country_code = 1;</code>
     */
    private void setCountryCode(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      countryCode_ = value;
    }
    /**
     * <pre>
     *国际区号+86
     * </pre>
     *
     * <code>optional string country_code = 1;</code>
     */
    private void clearCountryCode() {

      countryCode_ = getDefaultInstance().getCountryCode();
    }
    /**
     * <pre>
     *国际区号+86
     * </pre>
     *
     * <code>optional string country_code = 1;</code>
     */
    private void setCountryCodeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      countryCode_ = value.toStringUtf8();
    }

    public static final int PHONE_ID_FIELD_NUMBER = 2;
    private String phoneId_;
    /**
     * <pre>
     *手机号
     * </pre>
     *
     * <code>optional string phone_id = 2;</code>
     */
    public String getPhoneId() {
      return phoneId_;
    }
    /**
     * <pre>
     *手机号
     * </pre>
     *
     * <code>optional string phone_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPhoneIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(phoneId_);
    }
    /**
     * <pre>
     *手机号
     * </pre>
     *
     * <code>optional string phone_id = 2;</code>
     */
    private void setPhoneId(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      phoneId_ = value;
    }
    /**
     * <pre>
     *手机号
     * </pre>
     *
     * <code>optional string phone_id = 2;</code>
     */
    private void clearPhoneId() {

      phoneId_ = getDefaultInstance().getPhoneId();
    }
    /**
     * <pre>
     *手机号
     * </pre>
     *
     * <code>optional string phone_id = 2;</code>
     */
    private void setPhoneIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      phoneId_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!countryCode_.isEmpty()) {
        output.writeString(1, getCountryCode());
      }
      if (!phoneId_.isEmpty()) {
        output.writeString(2, getPhoneId());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!countryCode_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getCountryCode());
      }
      if (!phoneId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getPhoneId());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static HaiUserPhoneResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static HaiUserPhoneResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static HaiUserPhoneResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static HaiUserPhoneResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static HaiUserPhoneResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static HaiUserPhoneResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static HaiUserPhoneResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static HaiUserPhoneResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static HaiUserPhoneResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static HaiUserPhoneResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HaiUserPhoneResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code plugin.HaiUserPhoneResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          HaiUserPhoneResponse, Builder> implements
        // @@protoc_insertion_point(builder_implements:plugin.HaiUserPhoneResponse)
        HaiUserPhoneResponseOrBuilder {
      // Construct using com.windchat.proto.plugin.HaiUserPhoneProto.HaiUserPhoneResponse.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *国际区号+86
       * </pre>
       *
       * <code>optional string country_code = 1;</code>
       */
      public String getCountryCode() {
        return instance.getCountryCode();
      }
      /**
       * <pre>
       *国际区号+86
       * </pre>
       *
       * <code>optional string country_code = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCountryCodeBytes() {
        return instance.getCountryCodeBytes();
      }
      /**
       * <pre>
       *国际区号+86
       * </pre>
       *
       * <code>optional string country_code = 1;</code>
       */
      public Builder setCountryCode(
          String value) {
        copyOnWrite();
        instance.setCountryCode(value);
        return this;
      }
      /**
       * <pre>
       *国际区号+86
       * </pre>
       *
       * <code>optional string country_code = 1;</code>
       */
      public Builder clearCountryCode() {
        copyOnWrite();
        instance.clearCountryCode();
        return this;
      }
      /**
       * <pre>
       *国际区号+86
       * </pre>
       *
       * <code>optional string country_code = 1;</code>
       */
      public Builder setCountryCodeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setCountryCodeBytes(value);
        return this;
      }

      /**
       * <pre>
       *手机号
       * </pre>
       *
       * <code>optional string phone_id = 2;</code>
       */
      public String getPhoneId() {
        return instance.getPhoneId();
      }
      /**
       * <pre>
       *手机号
       * </pre>
       *
       * <code>optional string phone_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPhoneIdBytes() {
        return instance.getPhoneIdBytes();
      }
      /**
       * <pre>
       *手机号
       * </pre>
       *
       * <code>optional string phone_id = 2;</code>
       */
      public Builder setPhoneId(
          String value) {
        copyOnWrite();
        instance.setPhoneId(value);
        return this;
      }
      /**
       * <pre>
       *手机号
       * </pre>
       *
       * <code>optional string phone_id = 2;</code>
       */
      public Builder clearPhoneId() {
        copyOnWrite();
        instance.clearPhoneId();
        return this;
      }
      /**
       * <pre>
       *手机号
       * </pre>
       *
       * <code>optional string phone_id = 2;</code>
       */
      public Builder setPhoneIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPhoneIdBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:plugin.HaiUserPhoneResponse)
    }
    protected final Object dynamicMethod(
        MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new HaiUserPhoneResponse();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          HaiUserPhoneResponse other = (HaiUserPhoneResponse) arg1;
          countryCode_ = visitor.visitString(!countryCode_.isEmpty(), countryCode_,
              !other.countryCode_.isEmpty(), other.countryCode_);
          phoneId_ = visitor.visitString(!phoneId_.isEmpty(), phoneId_,
              !other.phoneId_.isEmpty(), other.phoneId_);
          if (visitor == MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  countryCode_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  phoneId_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (HaiUserPhoneResponse.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:plugin.HaiUserPhoneResponse)
    private static final HaiUserPhoneResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HaiUserPhoneResponse();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static HaiUserPhoneResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HaiUserPhoneResponse> PARSER;

    public static com.google.protobuf.Parser<HaiUserPhoneResponse> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
